{
  "Comment": "Performs lookups on a given subjects",
  "StartAt": "Enrich",
  "States": {
    "Enrich": {
      "Type": "Parallel",
      "Next": "Output Results",
      "Branches": [
        {
          "StartAt": "Enrich Multipurpose",
          "States": {
            "Enrich Multipurpose": {
              "Type": "Parallel",
              "Comment": "Always run multi functions",
              "Branches": [
                {
                  "StartAt": "CrowdStrike Falcon - Multipurpose",
                  "States": {
                    "CrowdStrike Falcon - Multipurpose": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "TimeoutSeconds": 10,
                      "OutputPath": "$.Payload",
                      "Parameters": {
                        "Payload.$": "$",
                        "FunctionName": "${CrowdStrikeFalconFunctionArn}"
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Alienvault OTX - Multipurpose",
                  "States": {
                    "Alienvault OTX - Multipurpose": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "TimeoutSeconds": 10,
                      "OutputPath": "$.Payload",
                      "Parameters": {
                        "Payload.$": "$",
                        "FunctionName": "${AlienvaultOTXFunctionArn}"
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "IPv4s to process?",
          "States": {
            "IPv4s to process?": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.Scope",
                  "StringMatches": "*ipv4*",
                  "Next": "Enrich by IPv4"
                }
              ],
              "Default": "Don't process IPv4s",
              "Comment": "Only run ipv4 functions if we have IPv4s to process."
            },
            "Don't process IPv4s": {
              "Type": "Pass",
              "End": true,
              "Result": []
            },
            "Enrich by IPv4": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "Greynoise - IPv4",
                  "States": {
                    "Greynoise - IPv4": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "TimeoutSeconds": 10,
                      "OutputPath": "$.Payload",
                      "Parameters": {
                        "FunctionName": "${GreynoiseFunctionArn}",
                        "Payload.$": "$"
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "IP API - IPv4",
                  "States": {
                    "IP API - IPv4": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "TimeoutSeconds": 10,
                      "OutputPath": "$.Payload",
                      "Parameters": {
                        "FunctionName": "${IPAPIFunctionArn}",
                        "Payload.$": "$"
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "End": true
                    }
                  }
                }
              ],
              "End": true
            }
          }
        }
      ]
    },
    "Output Results": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "TimeoutSeconds": 10,
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${OutputFunctionArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "End": true
    }
  }
}