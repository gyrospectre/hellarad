[{"id":0,"href":"/squyre/functions/crowdstrike/","title":"Crowdstrike","parent":"Functions","content":""},{"id":1,"href":"/squyre/architecture/","title":"Architecture","parent":"Squyre","content":""},{"id":2,"href":"/squyre/usage/customise/","title":"Customising for your environment","parent":"Usage","content":"There are a couple of features which can be customised for your environment.\nHostname Enrichment     Squyre will attempt to extract any internal hostnames from your alerts. Most organisations have a convention for endpoints and servers, but they vary considerably. As a result, you need to tell Squyre what your org\u0026rsquo;s convention is.\nDo this via an environment variable in template.yaml under the ConductorFunction section, specifying a Go compatible regular expression.\nHOST_REGEX: A-[A-Z0-9]{6} The above example will match hostnames such as A-AB12CD.\nFiltering out internal domains     In most cases, you don\u0026rsquo;t want to enrich your internal domain names or email addresses, you\u0026rsquo;re only concerned with domains unrelated to your organisation. Again, via an environment variable in template.yaml in the ConductorFunction section, you can tell Squyre to ignore your domain.\nIGNORE_DOMAIN: your-internal-domain.int "},{"id":3,"href":"/squyre/usage/getting_started/","title":"Getting started","parent":"Usage","content":"There are a couple of ways you can deploy, either directly between your alert source and ticketing system (pattern 1), or using an incident management platform like Opsgenie (pattern 2).\nPattern 1 is the out of the box configuration as it\u0026rsquo;s the most generic. If you are using Splunk and Jira, but don\u0026rsquo;t already have something in place to create tickets automatically when alerts fire, then this is for you.\nPattern 2 however, is more scalable. If you are already using Opsgenie in your alert pipeline, this is a better option. This allows you to add as many alert sources as you like, without having to change anything on the Squyre side.\n"},{"id":4,"href":"/squyre/usage/incidentmgmt/","title":"Getting Started: Opsgenie Deployment","parent":"Usage","content":" Clone the repo.  git clone https://github.com/gyrospectre/squyre.git Install the AWS SAM CLI. Edit template.yaml to use OpsGenie instead of Jira. In the OutputFunction definition, change the CodeUri value to output/opsgenie. While you\u0026rsquo;re at it, add a second snippet to template.yaml, to allow Opsgenie to send to the SNS topic.   AlertTopicPolicy: Type: AWS::SNS::TopicPolicy Properties: PolicyDocument: Id: AlertTopicPolicy Version: 2012-10-17 Statement: - Sid: OpsGenie-Publish Effect: Allow Principal: AWS: arn:aws:iam::089311581210:root Action: sns:Publish Resource: \u0026quot;*\u0026quot; Topics: - !Ref AlertTopic With appropriate AWS credentials in your terminal session, build and deploy the stack. Name the stack sqyre.  sam build sam deploy --guided Create an OpsGenie integration API key. In AWS, create a new Secrets Manager secretcalled OpsGenieAPI in the same account/region as Squyre is deployed. Use the following content, obviously substituting your key and email. The secret should be of type Other type of secret.  { \u0026quot;apikey\u0026quot;: \u0026lt;the API key you just created\u0026gt; } Setup OpsGenie to send SNS messagesto topic squyre-Alert on alert creation only.  Next time an alert fires, the details will be sent to Squyre, which will add enrichment details back into the Opsgenie alert in the form of notes.\n"},{"id":5,"href":"/squyre/usage/direct/","title":"Getting Started: Splunk to Jira Deployment","parent":"Usage","content":" Clone the repo.  git clone https://github.com/gyrospectre/squyre.git Install the AWS SAM CLI. Update the consts at the top of output/jira/main.go with your destination Jira instance URL (BaseURL) and Project name (Project). With appropriate AWS credentials in your terminal session, build and deploy the stack. Name the stack squyre.  sam build sam deploy --guided  Over on Splunk, install the Splunk Add-on for AWS, which adds the ability to send alerts to SNS.\n  Configure the app with some AWS credentials. The IAM user or role must have SNS Publish/Get/List perms to SNS topic squyre-Alert.\n  Create a Jira API key.\n  In AWS, create a new Secrets Manager secretcalled JiraApi in the same account/region as Squyre is deployed. Use the following content, obviously substituting your key and email. The secret should be of type Other type of secret.\n  { \u0026quot;apikey\u0026quot;: \u0026lt;the API key you just created\u0026gt;, \u0026quot;user\u0026quot;: \u0026lt;the email address of the Jira account the key is associated with\u0026gt; } Almost there! Update one of your Splunk saved searches, adding a strcat at the end to combine all the fields you think are of use to a new field called interesting.  \u0026lt;awesome detection logic\u0026gt; | stats values(src_ip) as src_ip by dest_user | eval Detection=\u0026quot;A test alert\u0026quot; | strcat src_ip \u0026quot;,\u0026quot; dest_user interesting\nAdd an AWS SNS Alert action to your scheduled search, updating the Message field of the action to $result.interesting$. Also fill out the Account and Region fields per the AWS Tech Add-on documentation. The topic should be set to squyre-Alert.  Next time this alert fires, the details will be sent to Squyre, which will create a Jira ticket for you, adding enrichment details in the form of comments.\n"},{"id":6,"href":"/squyre/usage/requirements/","title":"Requirements","parent":"Usage","content":"You will need 3 things in place in order to use Squyre.\n  You must have an AWS account to host it. It runs solely in AWS using serverless services (lambdas and step functions). If you don\u0026rsquo;t have one, don\u0026rsquo;t be too concerned with signing up - if you\u0026rsquo;re only running a few test alerts through Squyre AWS \u0026ldquo;Free Tier\u0026rdquo;should mean the cost is negligible (if not free).\n  You need something that is generating security alerts for you. Well, obviously! Currently, we support Splunk or Opsgenie as alert sources. If you don\u0026rsquo;t use either, but your platform supports sending alerts to AWS SNS, raise an issue and we can look at adding support - should be fairly easy.\n  You need something capturing the steps taken to investigate alerts, like a ticketing system. This is commonly a task management platform like Jira, ServiceNow etc. We support Jira or Opsgenie as output providers right now.\n  "},{"id":7,"href":"/squyre/usage/","title":"Usage","parent":"Squyre","content":""},{"id":8,"href":"/squyre/functions/","title":"Functions","parent":"Squyre","content":""},{"id":9,"href":"/squyre/overview/","title":"Overview","parent":"Squyre","content":"testt\n"},{"id":10,"href":"/squyre/contrib/","title":"Contrib","parent":"Squyre","content":""},{"id":11,"href":"/squyre/functions/greynoise/","title":"Greynoise","parent":"Functions","content":""},{"id":12,"href":"/squyre/functions/ipapi/","title":"Ipapi","parent":"Functions","content":""},{"id":13,"href":"/squyre/","title":"Squyre","parent":"","content":"Easy alert enrichment for overworked security teams!\nSquyre will help you deal with threats more effectively, decorating your security alerts by adding helpful information to provide context and help decide if this alert is cause for concern.\nThe Problem     Once beyond the earliest stages of maturity, Security teams build processes to generate alerts to tell them when threats may be active in their environment. These alerts must be \u0026ldquo;triaged\u0026rdquo; by an analyst; as in, deciding which of the following applies.\n \u0026ldquo;false positive\u0026rdquo; the alert was triggered by an event that it was not designed to catch \u0026ldquo;true positive benign\u0026rdquo; the alert was triggered by the intended event, but the activity is acceptable and does not require further action. \u0026ldquo;true positive malicious\u0026rdquo; the alert was triggered by the intended event. It\u0026rsquo;s bad and we need to call an incident!  The goal of threat detection is to be as accurate as possible with the last category, and minimise the other two. Unfortunately this is quite difficult! Enterprise environments are complex, and they have lots of humans doing complex stuff in them; you will always have some level of false positives/true positive benign alerts.\nUnfortunately, alerts of these undesirable types can be quite hard on the analyst! Alerts almost never contain all the information needed to be able to triage. An analyst will perform research on the host, IP address, file hash etc in the alert, trying to get context on what all of this information means and whether it means something bad has happened. This is time consuming and requires switching to numerous tools, websites etc to gather various parts of the puzzle.\nAt scale, this leads to \u0026ldquo;alert fatigue\u0026rdquo;: de-sensitising analysts with repetitive tasks, leading to missed or ignored alerts or delayed responses. It\u0026rsquo;s also not much fun! Poor alert quality leads to frustrated security teams that are not very happy and likely to leave.\nOur Solution     Ryan McGeehan\u0026rsquo;s 2017 article \u0026ldquo;Lessons Learned in Detection Engineering\u0026rdquo;is one I keep coming back to - go read it if you haven\u0026rsquo;t! In Ryan\u0026rsquo;s words:\n\u0026ldquo;Great teams prepare the on-call analyst with as much information as possible.\u0026quot; \u0026hellip; \u0026ldquo;You should decorate alerts. This describes a standard of detail where an alert brings additional information to the analyst without requiring extra work. This helps avoids “tab hell” where an analyst needs to be logged into several tools to follow up on an incident, just to know what is going on.\u0026quot; \u0026hellip; \u0026ldquo;A rule should trigger automation that pulls in corresponding information, including log snippets, translation of IDs or employee names, hostnames, opinions from threat intelligence, etc.\u0026quot;\nThis is exactly what Squyre does for you. Automation runs to gather this information and add to your alert - \u0026ldquo;decorating\u0026rdquo; them.\nIt is cheap and relatively easy to run, improving your ability to catch threats, and keeping your team happy and focussed on what you pay them for! There are commercial products out there to do this, but they can get VERY expensive.\nThat\u0026rsquo;s the goal of the project - put good alert management into everyone\u0026rsquo;s reach, regardless of their company\u0026rsquo;s size or budget.\n"},{"id":14,"href":"/squyre/tags/","title":"Tags","parent":"Squyre","content":""}]