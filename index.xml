<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Squyre on Squyre Documentation</title><link>https://gyrospectre.github.io/squyre/</link><description>Recent content in Squyre on Squyre Documentation</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://gyrospectre.github.io/squyre/index.xml" rel="self" type="application/rss+xml"/><item><title>CrowdStrike Falcon</title><link>https://gyrospectre.github.io/squyre/functions/crowdstrike/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/crowdstrike/</guid><description>Summary Indicator context from the CrowdStrike Falcon threat intelligence database. Also provides information on corporate hosts running the Falcon agent.
Requires a paid Falcon Insight and Falcon X license.
Supports ipv4, domain, sha256, hostname
Example Result Found Falcon X indicator for 127.0.0.1: Malicious confidence: 'High'. Added: 2022-01-01 00:00:00 Updated: 2022-01-01 00:00:10 Labels: %s Kill Chains: %s Malware Families: %s Vulnerabilities: %s Threat Types: %s Targets: %s More information at: https://falcon.</description></item><item><title>Architecture</title><link>https://gyrospectre.github.io/squyre/architecture/architecture/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/architecture/architecture/</guid><description>Squyre is serverless, and uses AWS services SNS, Lambda and Step Functions to do it&amp;rsquo;s thing.
Alerts are sent to the SNS topic, which triggers the first Lambda function, conductor. This function take the alert body, extracts IP addresses, domain names and hostnames, and then starts the step function with this information.
The step function (or state machine) then invokes enrichment functions depending on what sort of info was in the alert.</description></item><item><title>Customising for your environment</title><link>https://gyrospectre.github.io/squyre/usage/customise/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/customise/</guid><description>There are a couple of features which can be customised for your environment.
Enrichment Functions You can modify statemachine/enrich.asl.json to change which enrichment functions run. Don&amp;rsquo;t have CrowdStrike? No problem, just remove that component from the state machine. If you want, you can also remove unnecessary functions from template.yaml to cut down what gets deployed to AWS.
The easiest way to change the state machine definition is to edit it from the AWS Step Functions Workflow Studioin the AWS Console, then export as JSON back into statemachine/enrich.</description></item><item><title>Getting started</title><link>https://gyrospectre.github.io/squyre/usage/getting_started/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/getting_started/</guid><description>There are a couple of ways you can deploy, either directly between your alert source and ticketing system (pattern 1), or using an incident management platform like Opsgenie (pattern 2).
Pattern 1 is the out of the box configuration as it&amp;rsquo;s the most generic. If you are using Splunk and Jira, but don&amp;rsquo;t already have something in place to create tickets automatically when alerts fire, then this is for you.</description></item><item><title>Getting Started: Opsgenie Deployment</title><link>https://gyrospectre.github.io/squyre/usage/incidentmgmt/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/incidentmgmt/</guid><description>Clone the repo. git clone https://github.com/gyrospectre/squyre.git Install the AWS SAM CLI. Edit template.yaml to use OpsGenie instead of Jira. In the OutputFunction definition, change the CodeUri value to output/opsgenie. While you&amp;rsquo;re at it, add a second snippet to template.yaml, to allow Opsgenie to send to the SNS topic. AlertTopicPolicy: Type: AWS::SNS::TopicPolicy Properties: PolicyDocument: Id: AlertTopicPolicy Version: 2012-10-17 Statement: - Sid: OpsGenie-Publish Effect: Allow Principal: AWS: arn:aws:iam::089311581210:root Action: sns:Publish Resource: &amp;quot;*&amp;quot; Topics: - !</description></item><item><title>Getting Started: Splunk to Jira Deployment</title><link>https://gyrospectre.github.io/squyre/usage/direct/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/direct/</guid><description>Clone the repo. git clone https://github.com/gyrospectre/squyre.git Install the AWS SAM CLI. Update the consts at the top of output/jira/main.go with your destination Jira instance URL (BaseURL) and Project name (Project). With appropriate AWS credentials in your terminal session, build and deploy the stack. Name the stack squyre. sam build sam deploy --guided Over on Splunk, install the Splunk Add-on for AWS, which adds the ability to send alerts to SNS.</description></item><item><title>Requirements</title><link>https://gyrospectre.github.io/squyre/usage/requirements/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/requirements/</guid><description>You will need 3 things in place in order to use Squyre.
You must have an AWS account to host it. It runs solely in AWS using serverless services (lambdas and step functions). If you don&amp;rsquo;t have one, don&amp;rsquo;t be too concerned with signing up - if you&amp;rsquo;re only running a few test alerts through Squyre AWS &amp;ldquo;Free Tier&amp;rdquo;should mean the cost is negligible (if not free).
You need something that is generating security alerts for you.</description></item><item><title>State Machine</title><link>https://gyrospectre.github.io/squyre/architecture/state/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/architecture/state/</guid><description>The main state machine is called EnrichStateMachine, because it, uh enriches, and it&amp;rsquo;s a state machine.
It is defined by statemachine/enrich.asl.json in the AWS ASL language.
Layout is straightforward, nested parallel branches run the enrichment tasks which are sent to the output function at the end to update alerts/tickets.</description></item><item><title>Greynoise</title><link>https://gyrospectre.github.io/squyre/functions/greynoise/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/greynoise/</guid><description>Summary Data on IP addresses associated with opportunistic internet scanning or common business services, not targeted threats. For more information, check out https://www.greynoise.io/.
This function uses the free community API, so no key is required.
Supports ipv4
Example Result Greynoise believes 127.0.0.1 is malicious. Noise? true In the RIOT database? false Last seen 2022-02-06. More information at: https://viz.greynoise.io/ip/127.0.0.1 Setup No setup required.</description></item><item><title>IP API</title><link>https://gyrospectre.github.io/squyre/functions/ipapi/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/ipapi/</guid><description>Summary Geolocation data on IP addresses from https://ip-api.com/. This service is free for non-commercial use, which is the only form currently supported by this function. If you find IP API useful and would like to use it in a commercial environment, I&amp;rsquo;d encourage you to subscribe.
Supports ipv4
Example Result IP API result for 127.0.0.1 (Dynamic distribution IPs for broadband services): Country: Russia City: Baltiysk, Kaliningrad Oblast ISP: Rostelecom networks Setup No setup required.</description></item><item><title>Developing</title><link>https://gyrospectre.github.io/squyre/contrib/</link><pubDate>Sat, 05 Feb 2022 14:03:08 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/contrib/</guid><description>Data Structures squyre.Alert - The main data structure used by Squyre. It encapsulates everything about an alert, it&amp;rsquo;s details and the enrichment results. Alerts are the standard way data is passed around between components.
squyre.Subject - Any collection of data points which can be used for enrichment. At the time of writing, either an IP address or a domain name. Subjects are stored within Alerts.
squyre.Result - Stores enrichment results, the subject used, and the source of the data.</description></item><item><title>Overview</title><link>https://gyrospectre.github.io/squyre/overview/</link><pubDate>Sat, 05 Feb 2022 14:03:08 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/overview/</guid><description>testt</description></item></channel></rss>