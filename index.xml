<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Squyre on Squyre Documentation</title><link>https://gyrospectre.github.io/squyre/</link><description>Recent content in Squyre on Squyre Documentation</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://gyrospectre.github.io/squyre/index.xml" rel="self" type="application/rss+xml"/><item><title>CrowdStrike Falcon</title><link>https://gyrospectre.github.io/squyre/functions/crowdstrike/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/crowdstrike/</guid><description>Summary Indicator context from the CrowdStrike Falcon threat intelligence database. Also provides information on corporate hosts running the Falcon agent.
Requires a paid Falcon Insight and Falcon X license.
Supports ipv4, domain, sha256, hostname
Example Result Found Falcon X indicator for 127.0.0.1: Malicious confidence: &amp;#39;High&amp;#39;. Added: 2022-01-01 00:00:00 +0000 UTC Updated: 2022-01-01 00:00:10 +0000 UTC Labels: Killchain/C2,Malware/CobaltStrike Kill Chains: C2 Malware Families: CobaltStrike Vulnerabilities: Threat Types: Commodity,Criminal,RAT Targets: More information at: https://falcon.</description></item><item><title>Architecture</title><link>https://gyrospectre.github.io/squyre/architecture/architecture/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/architecture/architecture/</guid><description>Squyre is serverless, and uses AWS services SNS, API Gateway, Lambda and Step Functions to do it&amp;rsquo;s thing.
Alerts are sent in via SNS or Webhook, which triggers the first Lambda function, conductor. This function takes the alert body, extracts IP addresses, domain names, URLs and hostnames, and then starts the step function with this information.
The step function (or state machine) then invokes enrichment functions depending on what sort of info was in the alert.</description></item><item><title>Customising for your environment</title><link>https://gyrospectre.github.io/squyre/usage/customise/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/customise/</guid><description>There are a couple of features which can be customised for your environment.
Enrichment Functions You can modify statemachine/enrich.asl.json to change which enrichment functions run. The easiest way to do this is to use the included helper script, which provides a nice wizard to select functions.
make setup Then run the deploy again to save your changes to AWS.
Don&amp;rsquo;t have CrowdStrike? No problem, just remove that function!</description></item><item><title>Getting started</title><link>https://gyrospectre.github.io/squyre/usage/getting_started/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/getting_started/</guid><description>There are a couple of ways you can deploy, either directly between your alert source and ticketing system (pattern 1), or using an incident management platform like Opsgenie (pattern 2).
Pattern 1 is the out of the box configuration as it&amp;rsquo;s the most generic. If you don&amp;rsquo;t already have something in place to create tickets automatically when alerts fire, then this is for you. We currently support Splunk and Sumo Logic for alert sources.</description></item><item><title>Getting Started: Jira Setup</title><link>https://gyrospectre.github.io/squyre/usage/jira/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/jira/</guid><description> Create a Jira API key.
In AWS, create a new Secrets Manager secretcalled JiraApi in the same account/region as Squyre is deployed. Use the following content, obviously substituting your key and email. The secret should be of type Other type of secret.
{ &amp;#34;apikey&amp;#34;: &amp;lt;the API key you just created&amp;gt;, &amp;#34;user&amp;#34;: &amp;lt;the email address of the Jira account the key is associated with&amp;gt; }</description></item><item><title>Getting Started: OpsGenie Setup</title><link>https://gyrospectre.github.io/squyre/usage/opsgenie/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/opsgenie/</guid><description> Create an OpsGenie integration API key.
In AWS, create a new Secrets Manager secretcalled OpsGenieAPI in the same account/region as Squyre is deployed. Use the following content, obviously substituting your key and email. The secret should be of type Other type of secret.
{ &amp;#34;apikey&amp;#34;: &amp;lt;the API key you just created&amp;gt; } Setup OpsGenie to send SNS messagesto topic squyre-Alert on alert creation only.</description></item><item><title>Getting Started: Splunk Setup</title><link>https://gyrospectre.github.io/squyre/usage/splunk/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/splunk/</guid><description>On Splunk, install the Splunk Add-on for AWS, which adds the ability to send alerts to SNS.
Configure the app with some AWS credentials. The IAM user or role must have SNS Publish/Get/List perms to SNS topic squyre-Alert.
Update one of your Splunk saved searches, adding a strcat at the end to combine all the fields you think are of use to a new field called interesting.</description></item><item><title>Getting Started: Sumo Logic Setup</title><link>https://gyrospectre.github.io/squyre/usage/sumologic/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/sumologic/</guid><description>In Sumo, create a new Webhook connection under Manage Data &amp;gt; Monitoring &amp;gt; Connections. See the official guide here.
Use the following spec for the Payload. This matches the definition in Squyre, so that we can parse all the details correctly.
{ &amp;#34;event_type&amp;#34;: &amp;#34;trigger&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;{{Description}}&amp;#34;, &amp;#34;client&amp;#34;: &amp;#34;Sumo Logic&amp;#34;, &amp;#34;client_url&amp;#34;: &amp;#34;{{SearchQueryUrl}}&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;{{Name}}&amp;#34;, &amp;#34;time_range&amp;#34;: &amp;#34;{{TimeRange}}&amp;#34;, &amp;#34;time_trigger&amp;#34;: &amp;#34;{{FireTime}}&amp;#34;, &amp;#34;num_results&amp;#34;: &amp;#34;{{NumQueryResults}}&amp;#34;, &amp;#34;results&amp;#34;: &amp;#34;{{ResultsJson}}&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;{{Id}}&amp;#34; } Create a new scheduled search, and configure it to send notifications to the webhook you configured above.</description></item><item><title>Requirements</title><link>https://gyrospectre.github.io/squyre/usage/requirements/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/usage/requirements/</guid><description>You will need 3 things in place in order to use Squyre.
You must have an AWS account to host it. It runs solely in AWS using serverless services (lambdas and step functions). If you don&amp;rsquo;t have one, don&amp;rsquo;t be too concerned with signing up - if you&amp;rsquo;re only running a few test alerts through Squyre AWS &amp;ldquo;Free Tier&amp;rdquo;should mean the cost is negligible (if not completely free).</description></item><item><title>State Machine</title><link>https://gyrospectre.github.io/squyre/architecture/state/</link><pubDate>Sat, 05 Feb 2022 14:16:07 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/architecture/state/</guid><description>The main state machine is called EnrichStateMachine, because it, uh enriches, and it&amp;rsquo;s a state machine.
It is defined by statemachine/enrich.asl.json in the AWS ASL language.
Layout is straightforward, nested parallel branches run the enrichment tasks which are sent to the output function at the end to update alerts/tickets.</description></item><item><title>Alienvault OTX</title><link>https://gyrospectre.github.io/squyre/functions/alienvaultotx/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/alienvaultotx/</guid><description>Summary Indicator context from the Alienvault OTXthreat intelligence community.
No API key is required for lookups.
Supports ipv4, domain, url
Example Result Alienvault OTX has 1 matches for &amp;#39;127.0.0.1&amp;#39;, in the following pulses: IPQS Abusive IP List More information at: https://otx.alienvault.com/browse/global/pulses?q=127.0.0.1 Setup No setup required.
Environment Variables ONLY_LOG_MATCHES : Set to true (in template.</description></item><item><title>Greynoise</title><link>https://gyrospectre.github.io/squyre/functions/greynoise/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/greynoise/</guid><description>Summary Data on IP addresses associated with opportunistic internet scanning or common business services, not targeted threats. For more information, check out https://www.greynoise.io/.
This function uses the free community API, so no key is required.
Supports ipv4
Example Result Greynoise believes 127.0.0.1 is malicious. Noise? true In the RIOT database? false Last seen 2022-02-06. More information at: https://viz.greynoise.io/ip/127.0.0.1 Setup No setup required.</description></item><item><title>IP API</title><link>https://gyrospectre.github.io/squyre/functions/ipapi/</link><pubDate>Sat, 05 Feb 2022 14:05:25 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/functions/ipapi/</guid><description>Summary Geolocation data on IP addresses from https://ip-api.com/. This service is free for non-commercial use, which is the only form currently supported by this function. If you find IP API useful and would like to use it in a commercial environment, I&amp;rsquo;d encourage you to subscribe.
Supports ipv4
Example Result IP API result for 127.0.0.1 (Dynamic distribution IPs for broadband services): Country: Russia City: Baltiysk, Kaliningrad Oblast ISP: Rostelecom networks Setup No setup required.</description></item><item><title>Developing</title><link>https://gyrospectre.github.io/squyre/contrib/</link><pubDate>Sat, 05 Feb 2022 14:03:08 +1100</pubDate><guid>https://gyrospectre.github.io/squyre/contrib/</guid><description>Data Structures squyre.Alert - The main data structure used by Squyre. It encapsulates everything about an alert, it&amp;rsquo;s details and the enrichment results. Alerts are the standard way data is passed around between components.
squyre.Subject - Any collection of data points which can be used for enrichment. At the time of writing, either an IP address or a domain name. Subjects are stored within Alerts.
squyre.Result - Stores enrichment results, the subject used, and the source of the data.</description></item></channel></rss>